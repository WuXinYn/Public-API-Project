{"remainingRequest":"D:\\Graduation-Design\\API-Project\\api-project\\api-docs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\Graduation-Design\\API-Project\\api-project\\api-docs\\node_modules\\@vuepress\\plugin-search\\match-query.js","dependencies":[{"path":"D:\\Graduation-Design\\API-Project\\api-project\\api-docs\\node_modules\\@vuepress\\plugin-search\\match-query.js","mtime":1741953936635},{"path":"D:\\Graduation-Design\\API-Project\\api-project\\api-docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741953938524},{"path":"D:\\Graduation-Design\\API-Project\\api-project\\api-docs\\node_modules\\babel-loader\\lib\\index.js","mtime":1741953937919}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5zb21lLmpzIjsKaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKZXhwb3J0IGRlZmF1bHQgKHF1ZXJ5LCBwYWdlLCBhZGRpdGlvbmFsU3RyID0gbnVsbCkgPT4gewogIGxldCBkb21haW4gPSBnZXQocGFnZSwgJ3RpdGxlJywgJycpOwogIGlmIChnZXQocGFnZSwgJ2Zyb250bWF0dGVyLnRhZ3MnKSkgewogICAgZG9tYWluICs9IGAgJHtwYWdlLmZyb250bWF0dGVyLnRhZ3Muam9pbignICcpfWA7CiAgfQogIGlmIChhZGRpdGlvbmFsU3RyKSB7CiAgICBkb21haW4gKz0gYCAke2FkZGl0aW9uYWxTdHJ9YDsKICB9CiAgcmV0dXJuIG1hdGNoVGVzdChxdWVyeSwgZG9tYWluKTsKfTsKY29uc3QgbWF0Y2hUZXN0ID0gKHF1ZXJ5LCBkb21haW4pID0+IHsKICBjb25zdCBlc2NhcGVSZWdFeHAgPSBzdHIgPT4gc3RyLnJlcGxhY2UoL1stL1xcXiQqKz8uKCl8W1xde31dL2csICdcXCQmJyk7CgogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4CiAgY29uc3Qgbm9uQVNDSUlSZWdFeHAgPSBuZXcgUmVnRXhwKCdbXlx4MDAtXHg3Rl0nKTsKICBjb25zdCB3b3JkcyA9IHF1ZXJ5LnNwbGl0KC9ccysvZykubWFwKHN0ciA9PiBzdHIudHJpbSgpKS5maWx0ZXIoc3RyID0+ICEhc3RyKTsKICBpZiAoIW5vbkFTQ0lJUmVnRXhwLnRlc3QocXVlcnkpKSB7CiAgICAvLyBpZiB0aGUgcXVlcnkgb25seSBoYXMgQVNDSUkgY2hhcnMsIHRyZWF0IGFzIEVuZ2xpc2gKICAgIGNvbnN0IGhhc1RyYWlsaW5nU3BhY2UgPSBxdWVyeS5lbmRzV2l0aCgnICcpOwogICAgY29uc3Qgc2VhcmNoUmVnZXggPSBuZXcgUmVnRXhwKHdvcmRzLm1hcCgod29yZCwgaW5kZXgpID0+IHsKICAgICAgaWYgKHdvcmRzLmxlbmd0aCA9PT0gaW5kZXggKyAxICYmICFoYXNUcmFpbGluZ1NwYWNlKSB7CiAgICAgICAgLy8gVGhlIGxhc3Qgd29yZCAtIG9rIHdpdGggdGhlIHdvcmQgYmVpbmcgInN0YXJ0c3dpdGgiLWxpa2UKICAgICAgICByZXR1cm4gYCg/PS4qXFxiJHtlc2NhcGVSZWdFeHAod29yZCl9KWA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gTm90IHRoZSBsYXN0IHdvcmQgLSBleHBlY3QgdGhlIHdob2xlIHdvcmQgZXhhY3RseQogICAgICAgIHJldHVybiBgKD89LipcXGIke2VzY2FwZVJlZ0V4cCh3b3JkKX1cXGIpYDsKICAgICAgfQogICAgfSkuam9pbignJykgKyAnLisnLCAnZ2knKTsKICAgIHJldHVybiBzZWFyY2hSZWdleC50ZXN0KGRvbWFpbik7CiAgfSBlbHNlIHsKICAgIC8vIGlmIHRoZSBxdWVyeSBoYXMgbm9uLUFTQ0lJIGNoYXJzLCB0cmVhdCBhcyBvdGhlciBsYW5ndWFnZXMKICAgIHJldHVybiB3b3Jkcy5zb21lKHdvcmQgPT4gZG9tYWluLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih3b3JkKSA+IC0xKTsKICB9Cn07"},{"version":3,"names":["get","query","page","additionalStr","domain","frontmatter","tags","join","matchTest","escapeRegExp","str","replace","nonASCIIRegExp","RegExp","words","split","map","trim","filter","test","hasTrailingSpace","endsWith","searchRegex","word","index","length","some","toLowerCase","indexOf"],"sources":["D:/Graduation-Design/API-Project/api-project/api-docs/node_modules/@vuepress/plugin-search/match-query.js"],"sourcesContent":["\r\nimport get from 'lodash/get'\r\n\r\nexport default (query, page, additionalStr = null) => {\r\n  let domain = get(page, 'title', '')\r\n\r\n  if (get(page, 'frontmatter.tags')) {\r\n    domain += ` ${page.frontmatter.tags.join(' ')}`\r\n  }\r\n\r\n  if (additionalStr) {\r\n    domain += ` ${additionalStr}`\r\n  }\r\n\r\n  return matchTest(query, domain)\r\n}\r\n\r\nconst matchTest = (query, domain) => {\r\n  const escapeRegExp = str => str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\r\n\r\n  // eslint-disable-next-line no-control-regex\r\n  const nonASCIIRegExp = new RegExp('[^\\x00-\\x7F]')\r\n\r\n  const words = query\r\n    .split(/\\s+/g)\r\n    .map(str => str.trim())\r\n    .filter(str => !!str)\r\n\r\n  if (!nonASCIIRegExp.test(query)) {\r\n    // if the query only has ASCII chars, treat as English\r\n    const hasTrailingSpace = query.endsWith(' ')\r\n    const searchRegex = new RegExp(\r\n      words\r\n      .map((word, index) => {\r\n        if (words.length === index + 1 && !hasTrailingSpace) {\r\n          // The last word - ok with the word being \"startswith\"-like\r\n          return `(?=.*\\\\b${escapeRegExp(word)})`\r\n        } else {\r\n          // Not the last word - expect the whole word exactly\r\n          return `(?=.*\\\\b${escapeRegExp(word)}\\\\b)`\r\n        }\r\n      })\r\n      .join('') + '.+',\r\n      'gi'\r\n    )\r\n    return searchRegex.test(domain)\r\n  } else {\r\n    // if the query has non-ASCII chars, treat as other languages\r\n    return words.some(word => domain.toLowerCase().indexOf(word) > -1)\r\n  }\r\n}\r\n"],"mappings":";;;;AACA,OAAOA,GAAG,MAAM,YAAY;AAE5B,eAAe,CAACC,KAAK,EAAEC,IAAI,EAAEC,aAAa,GAAG,IAAI,KAAK;EACpD,IAAIC,MAAM,GAAGJ,GAAG,CAACE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;EAEnC,IAAIF,GAAG,CAACE,IAAI,EAAE,kBAAkB,CAAC,EAAE;IACjCE,MAAM,IAAI,IAAIF,IAAI,CAACG,WAAW,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;EACjD;EAEA,IAAIJ,aAAa,EAAE;IACjBC,MAAM,IAAI,IAAID,aAAa,EAAE;EAC/B;EAEA,OAAOK,SAAS,CAACP,KAAK,EAAEG,MAAM,CAAC;AACjC,CAAC;AAED,MAAMI,SAAS,GAAGA,CAACP,KAAK,EAAEG,MAAM,KAAK;EACnC,MAAMK,YAAY,GAAGC,GAAG,IAAIA,GAAG,CAACC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC;;EAExE;EACA,MAAMC,cAAc,GAAG,IAAIC,MAAM,CAAC,cAAc,CAAC;EAEjD,MAAMC,KAAK,GAAGb,KAAK,CAChBc,KAAK,CAAC,MAAM,CAAC,CACbC,GAAG,CAACN,GAAG,IAAIA,GAAG,CAACO,IAAI,CAAC,CAAC,CAAC,CACtBC,MAAM,CAACR,GAAG,IAAI,CAAC,CAACA,GAAG,CAAC;EAEvB,IAAI,CAACE,cAAc,CAACO,IAAI,CAAClB,KAAK,CAAC,EAAE;IAC/B;IACA,MAAMmB,gBAAgB,GAAGnB,KAAK,CAACoB,QAAQ,CAAC,GAAG,CAAC;IAC5C,MAAMC,WAAW,GAAG,IAAIT,MAAM,CAC5BC,KAAK,CACJE,GAAG,CAAC,CAACO,IAAI,EAAEC,KAAK,KAAK;MACpB,IAAIV,KAAK,CAACW,MAAM,KAAKD,KAAK,GAAG,CAAC,IAAI,CAACJ,gBAAgB,EAAE;QACnD;QACA,OAAO,WAAWX,YAAY,CAACc,IAAI,CAAC,GAAG;MACzC,CAAC,MAAM;QACL;QACA,OAAO,WAAWd,YAAY,CAACc,IAAI,CAAC,MAAM;MAC5C;IACF,CAAC,CAAC,CACDhB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,EAChB,IACF,CAAC;IACD,OAAOe,WAAW,CAACH,IAAI,CAACf,MAAM,CAAC;EACjC,CAAC,MAAM;IACL;IACA,OAAOU,KAAK,CAACY,IAAI,CAACH,IAAI,IAAInB,MAAM,CAACuB,WAAW,CAAC,CAAC,CAACC,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACpE;AACF,CAAC","ignoreList":[]}]}